[{"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\index.js":"1","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\App.js":"2","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\reportWebVitals.js":"3","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\mainPage\\index.js":"4","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\MainPage\\index.js":"5","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Stencil\\index.js":"6","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Shape\\index.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":168,"mtime":1612390557190,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":296,"mtime":1612390742772,"results":"12","hashOfConfig":"9"},{"size":5787,"mtime":1612478644048,"results":"13","hashOfConfig":"9"},{"size":4953,"mtime":1612977354435,"results":"14","hashOfConfig":"9"},{"size":292,"mtime":1612391055957,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1egte4n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\index.js",[],["33","34"],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\App.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\reportWebVitals.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\mainPage\\index.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\MainPage\\index.js",["35","36","37","38","39","40","41","42","43"],"import React, { useState, useEffect } from \"react\";\r\nimport Stencil from \"../Stencil\";\r\n\r\n//import styles\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst MainPage = (props) => {\r\n    const [showKidsInfo, setKidsInfoToggle] = useState(false);\r\n    const [showNotKidsInfo, setNotKidsInfoToggle] = useState(false);\r\n\r\n    function toggleKidsInfo(){\r\n        setKidsInfoToggle(!showKidsInfo);\r\n    }\r\n\r\n    function toggleNotKidsInfo(){\r\n        setNotKidsInfoToggle(!showNotKidsInfo);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.heading}><h3>Finding happiness...</h3></div>\r\n            <h4 className={styles.infoHeader}>How to find it?</h4>\r\n            <div className={styles.infoButtons}>\r\n                <div className={styles.kids}>\r\n                    <button onClick={toggleKidsInfo}>Tips For Kids</button>\r\n                </div>\r\n                <div className={styles.notKids}>\r\n                    <button onClick={toggleNotKidsInfo}>Tips for not so Kids</button>\r\n                </div>\r\n            </div>\r\n            <div className={`${styles.kidsInfo} ${showKidsInfo ? styles.show : styles.noShow}`}>\r\n                <div className={styles.infoBox}>\r\n                    <div className={styles.KidsPage}>\r\n                        <h3 className={styles.tipsHeading}>Okay, so what to do?</h3>\r\n                        <div className={styles.task}>\r\n                            <div className={styles.taskDetail}>1. Select the country from the list at the top corner.</div>\r\n                            <div><img className={styles.taskImg} src=\"\" alt=\"select country image\"/></div>\r\n                        </div>\r\n                        <div className={styles.task}>\r\n                            <div className={styles.taskDetail}>2. Click the shapes on the right and drag them to the similar holes.</div>\r\n                            <div><img className={styles.taskImg} src=\"\" alt=\"Drag and drop image\"/></div>\r\n                        </div>\r\n                        <div className={styles.task}>\r\n                            <div className={styles.taskDetail}>3. Make the shapes bigger or smaller so fit perfectly! That's it, eazy peezy!!</div>\r\n                            <div><img className={styles.taskImg} src=\"\" alt=\"changing shape size image\"/></div>\r\n                        </div>\r\n                        <div className={styles.task}>\r\n                            <div className={styles.taskDetail}>4. Point your mouse to each shape to know more about it!</div>\r\n                            <div><img className={styles.taskImg} src=\"\" alt=\"pointing to the shape image\"/></div>\r\n                        </div>\r\n                        <div className={styles.closeInfo}><button onClick={toggleKidsInfo}>Let's go!</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${styles.notKidsInfo} ${showNotKidsInfo ? styles.show : styles.noShow}`}>\r\n                <div className={styles.infoBox}>\r\n                    <div className={styles.notKidsPage}>\r\n                        <h3 className={styles.tipsHeading}>So, what's this activity is about?</h3>\r\n                        <div className={styles.info}>\r\n                            <div className={styles.infoDetail}>\r\n                                Kids are supposed to select a country from the list and then drag them to its\r\n                                corresponding hole in the stencil below. What's interesting here is the hole \r\n                                size is the size of the happiest country in the world Finland, so it basically \r\n                                goes to shows that how a certain country is lacking/gaining in a category.\r\n                            </div>\r\n                            <div className={styles.infoImg}><img src=\"\" alt=\"stencil1 image\"/></div>\r\n                        </div>\r\n                        <div className={styles.info}>\r\n                            <div className={styles.infoDetail}>\r\n                                Each shape represents a category on which the happiness score is measured, Circle:\r\n                                Gdp Per Capita, Rectangle: Social Support, Triangle: Generosity, Square: Percept of\r\n                                corrupt, Pentagon: Freedom of choice, Star: Healthy life expectancy.\r\n                            </div>\r\n                            <div className={styles.infoImg}><img src=\"\" alt=\"stencil2 image\"/></div>\r\n                        </div>\r\n                        <div className={styles.info}>\r\n                            <div className={styles.infoDetail}>\r\n                                So when the children will select any shape and if it's smaller than the standard size\r\n                                that means that country needs to work on that category where as for any size bigger than\r\n                                standard will not require adjustment. Just to simply tell them what needs to be done in \r\n                                order to make their country a little bit happier. Click <span><a href=\"#\">here</a></span>\r\n                                to know more about it.\r\n                            </div>\r\n                            <div className={styles.infoImg}><img src=\"\" alt=\"stencil3 image\"/></div>\r\n                        </div>\r\n                        <div className={styles.closeInfo}><button onClick={toggleNotKidsInfo}>Activity time!</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Stencil />\r\n            <div className={styles.aboutMe}>\r\n                Here I will put random stuff about me...\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Stencil\\index.js",["44","45"],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Shape\\index.js",["46","47"],"import React, { useState, useEffect } from \"react\";\r\n\r\n\r\n//import styles\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Shape = (props) => {\r\n    return (\r\n        <div className={styles.shape}>\r\n            This is the shape container\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shape;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":37,"column":34,"nodeType":"58","endLine":37,"endColumn":101},{"ruleId":"56","severity":1,"message":"57","line":41,"column":34,"nodeType":"58","endLine":41,"endColumn":100},{"ruleId":"56","severity":1,"message":"57","line":45,"column":34,"nodeType":"58","endLine":45,"endColumn":106},{"ruleId":"56","severity":1,"message":"57","line":49,"column":34,"nodeType":"58","endLine":49,"endColumn":108},{"ruleId":"56","severity":1,"message":"57","line":66,"column":61,"nodeType":"58","endLine":66,"endColumn":95},{"ruleId":"56","severity":1,"message":"57","line":74,"column":61,"nodeType":"58","endLine":74,"endColumn":95},{"ruleId":"59","severity":1,"message":"60","line":81,"column":95,"nodeType":"58","endLine":81,"endColumn":107},{"ruleId":"56","severity":1,"message":"57","line":84,"column":61,"nodeType":"58","endLine":84,"endColumn":95},{"ruleId":"61","severity":1,"message":"62","line":45,"column":8,"nodeType":"63","endLine":45,"endColumn":17,"suggestions":"64"},{"ruleId":"52","severity":1,"message":"65","line":47,"column":14,"nodeType":"54","messageId":"55","endLine":47,"endColumn":21},{"ruleId":"52","severity":1,"message":"66","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countryData'. Either include it or remove the dependency array.","ArrayExpression",["69"],"'getData' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [country, countryData]",{"range":"72","text":"73"},[2999,3008],"[country, countryData]"]
[{"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\index.js":"1","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\App.js":"2","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\reportWebVitals.js":"3","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Stencil\\index.js":"4","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Services\\country.js":"5","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\MainPage\\index.js":"6","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Shape\\index.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":180,"mtime":1614902153072,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4340,"mtime":1614902153080,"results":"12","hashOfConfig":"9"},{"size":208,"mtime":1612990978196,"results":"13","hashOfConfig":"9"},{"size":11893,"mtime":1614902153074,"results":"14","hashOfConfig":"9"},{"size":292,"mtime":1614902153077,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1egte4n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\index.js",[],["32","33"],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\App.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\reportWebVitals.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Stencil\\index.js",["34","35","36","37","38","39","40","41","42","43","44","45","46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport { getCountryData } from \"../Services/country\";\r\nimport ShapesInfo from \"../ShapesInfo\";\r\n\r\n//import assets\r\nimport { mdiChevronDown, mdiChevronUp } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport { Stage, Layer, Star, Rect, Circle, RegularPolygon } from \"react-konva\";\r\n\r\n//import styles\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst Stencil = () => {\r\n    const countries = [\"Finland\", \"Denmark\", \"Switzerland\",\r\n        \"Iceland\",\"Norway\",\"Netherlands\",\"Sweden\",\"New Zealand\",\"Austria\",\"Luxembourg\",\"Canada\",\"Australia\",\"United Kingdom\",\"Israel\",\"Costa Rica\",\"Ireland\",\"Germany\",\"United States\",\"Czech Republic\",\"Belgium\",\r\n        \"United Arab Emirates\",\"Malta\",\"France\",\"Mexico\",\"Taiwan Province of China\",\"Uruguay\",\"Saudi Arabia\",\"Spain\",\"Guatemala\",\"Italy\",\"Singapore\",\"Brazil\",\"Slovenia\",\"El Salvador\",\"Kosovo\",\"Panama\",\"Slovakia\",\"Uzbekistan\",\"Chile\",\"Bahrain\",\"Lithuania\",\r\n        \"Trinidad and Tobago\",\"Poland\",\"Colombia\",\"Cyprus\",\"Nicaragua\",\"Romania\",\"Kuwait\",\"Mauritius\",\"Kazakhstan\",\"Estonia\",\"Philippines\",\"Hungary\",\"Thailand\",\"Argentina\",\"Honduras\",\"Latvia\",\"Ecuador\",\"Portugal\",\"Jamaica\",\"South Korea\", \"Japan\",\"Peru\",\"Serbia\",\r\n        \"Bolivia\",\"Pakistan\",\"Paraguay\",\"Dominican Republic\",\"Bosnia and Herzegovina\",\"Moldova\",\"Tajikistan\",\"Montenegro\",\"Russia\",\"Kyrgyzstan\",\"Belarus\",\"North Cyprus\",\"Greece\",\"Hong Kong S.A.R. of China\",\"Croatia\",\"Libya\",\"Mongolia\",\"Malaysia\",\"Vietnam\",\"Indonesia\",\"Ivory Coast\",\"Benin\",\"Maldives\",\"Congo (Brazzaville)\",\r\n        \"Azerbaijan\",\"Macedonia\",\"Ghana\",\"Nepal\",\"Turkey\",\"China\",\"Turkmenistan\",\"Bulgaria\",\"Morocco\",\"Cameroon\",\"Venezuela\",\"Algeria\",\"Senegal\",\"Guinea\",\"Niger\",\"Laos\",\"Albania\",\r\n        \"Cambodia\",\"Bangladesh\",\"Gabon\",\"South Africa\",\"Iraq\",\"Lebanon\",\"Burkina Faso\",\"Gambia\",\"Mali\",\"Nigeria\",\"Armenia\",\"Georgia\",\"Iran\",\"Jordan\",\"Mozambique\",\"Kenya\",\"Namibia\",\"Ukraine\",\"Liberia\",\"Palestinian Territories\",\"Uganda\",\"Chad\",\"Tunisia\",\"Mauritania\",\r\n        \"Sri Lanka\",\"Congo (Kinshasa)\",\"Swaziland\",\"Myanmar\",\"Comoros\",\"Togo\",\"Ethiopia\",\"Madagascar\",\"Egypt\",\"Sierra Leone\",\"Burundi\",\r\n        \"Zambia\",\"Haiti\",\"Lesotho\",\"India\",\"Malawi\",\"Yemen\",\"Botswana\",\"Tanzania\",\"Central African Republic\",\"Rwanda\",\"Zimbabwe\",\"South Sudan\",\"Afghanistan\"\r\n        ]\r\n    \r\n    const [country, setCountry] = useState('Select a country');\r\n    const [display, setListDisplay] = useState(false);\r\n    const [countryData, setCountryData] = useState({\"Rank\":{\"data\":1},\"CountryName\":{\"data\":\"Finland\"},\"Region\":{\"data\":\"Western Europe\"},\"Score\":{\"data\":7.808700085},\"Gdp_Per_Capita\":{\"data\":10.63926697},\"Soc_Support\":{\"data\":0.954329729},\"Health_life_expectancy\":{\"data\":71.9008255},\"Freedom_of_choice\":{\"data\":0.949172199},\"Generosity\":{\"data\":-0.059482019},\"Percept_of_corrupt\":{\"data\":0.195444584}});\r\n    \r\n    //shapes state\r\n    const [squarePos, setSqPosition] = useState({x: 45, y:40})\r\n    const [circlePos, setCircPosition] = useState({x: 225, y:70})\r\n    const [starPos, setStarPosition] = useState({x: 350, y:80})\r\n    const [rectanglePos, setRectPosition] = useState({x: 450, y:70})\r\n    const [trianglePos, setTriPosition] = useState({x: 700, y:90})\r\n    const [pentagonPos, setPentPosition] = useState({x: 825, y:80})\r\n\r\n\r\n    //stencil sizes and position\r\n    var finland = {\"Rank\":{\"data\":1},\"CountryName\":{\"data\":\"Finland\"},\"Region\":{\"data\":\"Western Europe\"},\"Score\":{\"data\":7.808700085},\"Gdp_Per_Capita\":{\"data\":10.63926697},\"Soc_Support\":{\"data\":0.954329729},\"Health_life_expectancy\":{\"data\":71.9008255},\"Freedom_of_choice\":{\"data\":0.949172199},\"Generosity\":{\"data\":-0.059482019},\"Percept_of_corrupt\":{\"data\":0.195444584}}\r\n    var sqStencil = {x:0, y:60}\r\n    var circStencil = {x:400, y:90}\r\n    var starStencil = {x:800, y:90}\r\n    var rectStencil = {x:30, y:230}\r\n    var triStencil = {x:400, y:280}\r\n    var pentStencil = {x:800, y:260}\r\n    \r\n    \r\n    function toggleList(){\r\n        setListDisplay(!display);\r\n    }    \r\n\r\n    function changeCountry(e){\r\n        setCountry(e.target.innerHTML);\r\n        setListDisplay(!display);\r\n        console.log(e.target.innerHTML);\r\n    }\r\n\r\n    function checkIntersection(e){\r\n        console.log(\"checking intersection\");\r\n        var shape = e.target.attrs;\r\n        var layerX = 45\r\n        var layerY = 150\r\n        if(shape.id == 1){\r\n            console.log(\"shape: square\");\r\n            if(shape.x <= 80 && shape.x >= 30 && shape.y <= 210 && shape.y >= 160){\r\n                console.log(\"collision course!\");\r\n                setSqPosition({x:sqStencil.x + layerX, y:sqStencil.y + layerY});\r\n            }else{\r\n                setSqPosition({x:45, y:40});\r\n            }\r\n        }\r\n        else if(shape.id == 2){\r\n            console.log(\"shape: circle\");\r\n            if(shape.x <= 480 && shape.x >= 430 && shape.y <= 240 && shape.y >= 190){\r\n                console.log(\"collision course!\");\r\n                setCircPosition({x:circStencil.x + layerX, y:circStencil.y + layerY});\r\n            }else{\r\n                setCircPosition({x:225, y:70});\r\n            }\r\n        }\r\n        else if(shape.id == 3){\r\n            console.log(\"shape: star\");\r\n            if(shape.x <= 880 && shape.x >= 830 && shape.y <= 240 && shape.y >= 190){\r\n                console.log(\"collision course!\");\r\n                setStarPosition({x:starStencil.x + layerX, y:starStencil.y + layerY});\r\n            }else{\r\n                setStarPosition({x:350, y:80});\r\n            }\r\n        }\r\n        else if(shape.id == 4){\r\n            console.log(\"shape: Rectangle\");\r\n            if(shape.x <= 80 && shape.x >= 30 && shape.y <= 380 && shape.y >= 330){\r\n                console.log(\"collision course!\");\r\n                setRectPosition({x:rectStencil.x + layerX, y:rectStencil.y + layerY});\r\n            }else{\r\n                setRectPosition({x:450, y:40});\r\n            }\r\n        }\r\n        else if(shape.id == 5){\r\n            console.log(\"shape: Triangle\");\r\n            if(shape.x <= 480 && shape.x >= 430 && shape.y <= 430 && shape.y >= 380){\r\n                console.log(\"collision course!\");\r\n                setTriPosition({x:triStencil.x + layerX, y:triStencil.y + layerY});\r\n            }else{\r\n                setTriPosition({x:700, y:90});\r\n            }\r\n        }\r\n        else if(shape.id == 6){\r\n            console.log(\"shape: Pentagon\");\r\n            if(shape.x <= 880 && shape.x >= 830 && shape.y <= 450 && shape.y >= 350){\r\n                console.log(\"collision course!\");\r\n                setPentPosition({x:pentStencil.x + layerX, y:pentStencil.y + layerY});\r\n            }else{\r\n                setPentPosition({x:825, y:80});\r\n            }\r\n        }\r\n    }\r\n\r\n    function displayCord(e){\r\n        var shape = e.target.attrs;\r\n        if(shape.id == 1){\r\n            setSqPosition({x:0, y:0});\r\n        }else if(shape.id == 2){\r\n            setCircPosition({x:0, y:0});\r\n        }else if(shape.id == 3){\r\n            setStarPosition({x:0, y:0});\r\n        }else if(shape.id == 4){\r\n            setRectPosition({x:0, y:0});\r\n        }else if(shape.id == 5){\r\n            setTriPosition({x:0, y:0});\r\n        }else if(shape.id == 6){\r\n            setPentPosition({x:0, y:0});\r\n        }\r\n        console.log(`X: ${Math.round(e.target.attrs.x)} Y: ${Math.round(e.target.attrs.y)}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n         // GET request using fetch inside useEffect React hook\r\n         console.log(country)\r\n         console.log(\"Country data change in effect..\")\r\n\r\n         if(country != \"Select a country\"){\r\n            let mounted = true;\r\n            getCountryData(country)\r\n            .then(data => {\r\n                if(mounted) {\r\n                    setCountryData(data)\r\n                    setSqPosition({x:45, y:30});\r\n                    setStarPosition({x:350, y:80});\r\n                    setCircPosition({x:225, y:70});\r\n                    setRectPosition({x:450, y:40});\r\n                    setTriPosition({x:700, y:90});\r\n                    setPentPosition({x:825, y:80});\r\n                }\r\n            })\r\n            if(countryData != null){\r\n                console.log(countryData)\r\n            }\r\n            return () => mounted = false;\r\n        }\r\n\r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, [country]);\r\n    \r\n    return (\r\n        <div className={styles.mainArea}>\r\n           <div className={styles.infoDivs}> \r\n                <div className={styles.dropDown}>\r\n                    <button className={styles.dropDownBtn} onClick={toggleList}>{country} {display ? <Icon path={mdiChevronUp} size=\"35px\" className={styles.selectIcon}/> : <Icon path={mdiChevronDown} size=\"35px\" className={styles.selectIcon}/>}</button>\r\n                    <div className={styles.dropDownContent} style={{ display: display ? \"flex\" : \"none\" }}>\r\n                        <ul>\r\n                            {countries.map((item)=>\r\n                                <li className={styles.countryLabel} onClick={changeCountry}>{item}</li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <ShapesInfo />\r\n            </div>\r\n            <div className={styles.shapeStage}>\r\n                <Stage width={1000} height={700} margin={50}>\r\n                    <Layer className={styles.shapeLayer}>\r\n                        <Rect x={squarePos.x} y={squarePos.y} width={(100*(countryData.Gdp_Per_Capita.data/9.295706))/2} height={(100*(countryData.Gdp_Per_Capita.data/9.295706))/2} id=\"1\" fill=\"#D7DF21\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>\r\n                        <Circle x={circlePos.x} y={circlePos.y} radius={(100*(countryData.Freedom_of_choice.data/0.78336))/2} id=\"2\" fill=\"#006990\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>\r\n                        <Star x={starPos.x} y={starPos.y} numPoints={5} innerRadius={25} outerRadius={(100*(countryData.Soc_Support.data/0.808721))/2} rotation={70} id=\"3\" fill=\"#FFB61B\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>\r\n                        <Rect x={rectanglePos.x} y={rectanglePos.y} width={(100*(countryData.Percept_of_corrupt.data/0.73312))} height={(100*(countryData.Percept_of_corrupt.data/0.73312))/2} id=\"4\" fill=\"#D7DF21\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>\r\n                        <RegularPolygon x={trianglePos.x} y={trianglePos.y} sides={3} radius={(100*(countryData.Health_life_expectancy.data/64.4453))/2} id=\"5\" fill=\"#006990\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>\r\n                        <RegularPolygon x={pentagonPos.x} y={pentagonPos.y} sides={6} radius={(10*(countryData.Generosity.data/-0.01457))/4} id=\"6\" fill=\"#FFB61B\" draggable onDragMove={displayCord} onDragEnd={checkIntersection}/>    \r\n                    </Layer>\r\n                    <Layer x={45} y={150} className={styles.stencilLayer}>\r\n                        <Rect x={sqStencil.x} y={sqStencil.y} width={(100*(finland.Gdp_Per_Capita.data/9.295706))/2} height={(100*(finland.Gdp_Per_Capita.data/9.295706))/2} stroke=\"#9F388A\" strokeWidth={5}/>\r\n                        <Circle x={circStencil.x} y={circStencil.y} radius={(100*(finland.Freedom_of_choice.data/0.78336))/2} stroke=\"#9F388A\" strokeWidth={5}/>\r\n                        <Star x={starStencil.x} y={starStencil.y} numPoints={5} innerRadius={25} outerRadius={(100*(finland.Soc_Support.data/0.808721))/2} rotation={70} stroke=\"#9F388A\" strokeWidth={5} />\r\n                        <Rect  x={rectStencil.x} y={rectStencil.y} width={(100*(finland.Percept_of_corrupt.data/0.73312))} height={(100*(finland.Percept_of_corrupt.data/0.73312))/2} stroke=\"#9F388A\" strokeWidth={5} />\r\n                        <RegularPolygon x={triStencil.x} y={triStencil.y} sides={3} radius={(100*(finland.Health_life_expectancy.data/64.4453))/2} stroke=\"#9F388A\" strokeWidth={5} />\r\n                        <RegularPolygon  x={pentStencil.x} y={pentStencil.y} sides={6} radius={(10*(finland.Generosity.data/-0.01457))/4} stroke=\"#9F388A\" strokeWidth={5} />        \r\n                    </Layer>\r\n                </Stage>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stencil;","C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Services\\country.js",[],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\MainPage\\index.js",["48","49","50","51","52","53","54","55","56","57","58","59","60"],"C:\\Users\\Moiz\\Desktop\\Experiments 2.0\\HappinessProj\\frontend\\happ-project\\src\\Shape\\index.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":63,"column":21,"nodeType":"69","messageId":"70","endLine":63,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":72,"column":26,"nodeType":"69","messageId":"70","endLine":72,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":81,"column":26,"nodeType":"69","messageId":"70","endLine":81,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":90,"column":26,"nodeType":"69","messageId":"70","endLine":90,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":99,"column":26,"nodeType":"69","messageId":"70","endLine":99,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":108,"column":26,"nodeType":"69","messageId":"70","endLine":108,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":121,"column":21,"nodeType":"69","messageId":"70","endLine":121,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":123,"column":27,"nodeType":"69","messageId":"70","endLine":123,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":125,"column":27,"nodeType":"69","messageId":"70","endLine":125,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":127,"column":27,"nodeType":"69","messageId":"70","endLine":127,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":129,"column":27,"nodeType":"69","messageId":"70","endLine":129,"endColumn":29},{"ruleId":"67","severity":1,"message":"68","line":131,"column":27,"nodeType":"69","messageId":"70","endLine":131,"endColumn":29},{"ruleId":"67","severity":1,"message":"71","line":142,"column":21,"nodeType":"69","messageId":"70","endLine":142,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":163,"column":8,"nodeType":"74","endLine":163,"endColumn":17,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":20,"column":36,"nodeType":"82","messageId":"83","endLine":20,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":22,"column":22,"nodeType":"69","messageId":"70","endLine":22,"endColumn":24},{"ruleId":"80","severity":1,"message":"81","line":34,"column":36,"nodeType":"82","messageId":"83","endLine":34,"endColumn":38},{"ruleId":"67","severity":1,"message":"68","line":36,"column":22,"nodeType":"69","messageId":"70","endLine":36,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":101,"column":38,"nodeType":"86","endLine":101,"endColumn":105},{"ruleId":"84","severity":1,"message":"85","line":110,"column":38,"nodeType":"86","endLine":110,"endColumn":104},{"ruleId":"84","severity":1,"message":"85","line":120,"column":38,"nodeType":"86","endLine":120,"endColumn":110},{"ruleId":"84","severity":1,"message":"85","line":130,"column":38,"nodeType":"86","endLine":130,"endColumn":112},{"ruleId":"84","severity":1,"message":"85","line":153,"column":65,"nodeType":"86","endLine":153,"endColumn":99},{"ruleId":"84","severity":1,"message":"85","line":166,"column":65,"nodeType":"86","endLine":166,"endColumn":99},{"ruleId":"87","severity":1,"message":"88","line":179,"column":99,"nodeType":"86","endLine":179,"endColumn":111},{"ruleId":"84","severity":1,"message":"85","line":182,"column":65,"nodeType":"86","endLine":182,"endColumn":99},{"ruleId":"76","severity":1,"message":"89","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countryData'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [country, countryData]",{"range":"95","text":"96"},[8320,8329],"[country, countryData]"]